{"version":3,"sources":["../../src/learning-header/LearningHeader.jsx"],"names":["React","useContext","useEffect","useState","PropTypes","getConfig","injectIntl","intlShape","AppContext","AnonymousUserMenu","AuthenticatedUserDropdown","messages","getCourseLogoOrg","LinkedLogo","href","src","alt","attributes","propTypes","string","isRequired","enabledOrgLogo","process","env","ENABLED_ORG_LOGO","LearningHeader","courseOrg","courseTitle","intl","showUserDropdown","authenticatedUser","logoOrg","setLogoOrg","then","logoOrgUrl","headerLogo","LMS_BASE_URL","LOGO_URL","SITE_NAME","formatMessage","skipNavLink","maxHeight","fontSize","username","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { AppContext } from '@edx/frontend-platform/react';\n\nimport AnonymousUserMenu from './AnonymousUserMenu';\nimport AuthenticatedUserDropdown from './AuthenticatedUserDropdown';\nimport messages from './messages';\nimport getCourseLogoOrg from './data/api';\n\nimport './_header.scss';\n\nfunction LinkedLogo({\n  href,\n  src,\n  alt,\n  ...attributes\n}) {\n  return (\n    <a href={href} {...attributes}>\n      <img className=\"d-block\" src={src} alt={alt} />\n    </a>\n  );\n}\n\nLinkedLogo.propTypes = {\n  href: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\n// this feature flag is not included on the frontend-platform, we have to get it directly from ENV\nconst enabledOrgLogo = process.env.ENABLED_ORG_LOGO || false;\n\nfunction LearningHeader({\n  courseOrg, courseTitle, intl, showUserDropdown,\n}) {\n  const { authenticatedUser } = useContext(AppContext);\n  const [logoOrg, setLogoOrg] = useState(null);\n\n  useEffect(() => {\n    if (courseOrg) {\n      getCourseLogoOrg().then((logoOrgUrl) => { setLogoOrg(logoOrgUrl); });\n    }\n  }, []);\n\n  const headerLogo = (\n    <LinkedLogo\n      className=\"logo\"\n      href={`${getConfig().LMS_BASE_URL}/dashboard`}\n      src={getConfig().LOGO_URL}\n      alt={getConfig().SITE_NAME}\n    />\n  );\n\n  return (\n    <header className=\"learning-header\">\n      <a className=\"sr-only sr-only-focusable\" href=\"#main-content\">{intl.formatMessage(messages.skipNavLink)}</a>\n      <div className=\"container-xl py-2 d-flex align-items-center\">\n        {headerLogo}\n        <div className=\"d-none d-md-block flex-grow-1 course-title-lockup\">\n          <div className={`d-md-flex ${enabledOrgLogo && 'align-items-center justify-content-center'} w-100`}>\n            {enabledOrgLogo ? (\n              (courseOrg && logoOrg)\n              && <img src={logoOrg} alt={`${courseOrg} logo`} style={{ maxHeight: '45px' }} />\n            ) : null}\n            <span\n              className=\"d-inline-block course-title font-weight-semibold ml-3 text-truncate text-left w-25\"\n              style={{ fontSize: '0.85rem' }}\n            >\n              {courseTitle}\n            </span>\n          </div>\n        </div>\n        {showUserDropdown && authenticatedUser && (\n          <AuthenticatedUserDropdown\n            username={authenticatedUser.username}\n          />\n        )}\n        {showUserDropdown && !authenticatedUser && (\n          <AnonymousUserMenu />\n        )}\n      </div>\n    </header>\n  );\n}\n\nLearningHeader.propTypes = {\n  courseOrg: PropTypes.string,\n  courseTitle: PropTypes.string,\n  intl: intlShape.isRequired,\n  showUserDropdown: PropTypes.bool,\n};\n\nLearningHeader.defaultProps = {\n  courseOrg: null,\n  courseTitle: null,\n  showUserDropdown: true,\n};\n\nexport default injectIntl(LearningHeader);\n"],"file":"LearningHeader.js"}